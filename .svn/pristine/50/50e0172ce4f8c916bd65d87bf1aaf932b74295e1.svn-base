#pragma once 

#include "Window.h"
#include "GLSLShader.h"
#include "Net.h"
#include "Camera.h"


class Game : public Window {
public:
	void setupAndStart();
private:	
	thread t;
	bool shouldRender = false;
	atomic<bool> done = false;

	// Global Matrices Uniform Buffer Object and Binding Index
	GLuint globalMatricesUBO;
	GLuint globalMatricesUBI;

	GLSLShader shader, normalsShader;

	glm::mat4 perspectiveMatrix;
	CameraPtr camera = CameraPtr(new FreeLookCamera());

	unsigned int debugCounter = 0;
	shared_ptr<Net> ground;

	void myRenderFunction();
	void render();
	void loadShaders();
	void setGlobalMatrices();

	void initStuff();
	void startThread();
	void threadStuff();
};