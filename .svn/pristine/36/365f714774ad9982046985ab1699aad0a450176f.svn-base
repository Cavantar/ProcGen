#pragma once 

#include "Includes.h"

class Noise {
public:
	static float random() { return (rand() % 255) * (1.0f / 255); }
	static float value(glm::vec2 point, float frequency);
	static float perlin(float value, float frequency);
	static float perlin(glm::vec2 point, float frequency);

	static float sumPerlin(glm::vec2 point, float frequency, int octaves);

private:

	static int hash[];
	static int hashMask;

	static float gradients1D[];
	static int gradients1DMask;

	static glm::vec2 gradients2D[];
	static int gradients2DMask;

	static float sqr2;

	static float smooth(float t) {
		return t * t * t *(t * (t * 6.0f - 15.0f) + 10.0f);
	}
};